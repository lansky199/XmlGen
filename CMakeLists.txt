CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(xmlgen)

IF (COMPILER_GCC)
    # GCC编译选项
    SET(CMAKE_C_COMPILER gcc)
    SET(CMAKE_CXX_COMPILER g++)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fexceptions -Wno-unused-local-typedefs -ffunction-sections -fdata-sections")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -fexceptions")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-local-typedefs -Wreorder -ffunction-sections -fdata-sections")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-omit-frame-pointer")

    # 打开ASAN内存检测
    IF (OPEN_MEMORY_CHECK)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=leak")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libasan")
        MESSAGE(STATUS "Open memory check")
    ENDIF (OPEN_MEMORY_CHECK)

    # DEBUG编译选项
    SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -D_DEBUG -O0 -Wall -Werror")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wextra -Wpointer-arith -Wcast-qual")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wunreachable-code -Woverloaded-virtual")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wdouble-promotion -Wunused-parameter -g -ggdb -fpic -fPIC")

    # RELEASE编译选项
    SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -DNDEBUG -Wall")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Os")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wextra -Wpointer-arith")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wdouble-promotion -Woverloaded-virtual")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wunused-parameter -g -fpic -fPIC")
ELSE (COMPILER_GCC)
    # MSVC编译选项
    SET(CMAKE_CONFIGURATION_TYPES "Debug;Release")
    SET(CMAKE_C_COMPILER msvc)
    SET(CMAKE_CXX_COMPILER msvc)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3 /MP /bigobj /wd4496 /wd4267 /wd4244 /Zi")
    SET(CMAKE_CXX_FLAGS_DEBUG "-DDEBUG /MTd /Od")
    SET(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG /MT /DEBUG:FASTLINK")
    SET(CMAKE_C_FLAGS_DEBUG "-DDEBUG /MTd /Zi")
    SET(CMAKE_C_FLAGS_RELEASE "-DNDEBUG /MT /DEBUG:FASTLINK")

    # 预定义宏
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -D_WINSOCK_DEPRECATED_NO_WARNINGS)
    ADD_DEFINITIONS(-DWIN32_LEAN_AND_MEAN -D_WIN32_WINNT=0x0501)
    ADD_DEFINITIONS(-DWIN32 -DWINDOWS)
ENDIF (COMPILER_GCC)

# 设置输出文件路径
SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}/")

AUX_SOURCE_DIRECTORY(./src/ XMLGEN_SOURCES)
FILE(GLOB XMLGEN_HEADERS ./src/*.h ./src/*.hpp)

SOURCE_GROUP(\\ FILES ${XMLGEN_SOURCES} ${XMLGEN_HEADERS})

ADD_EXECUTABLE(xmlgen ${XMLGEN_SOURCES} ${XMLGEN_HEADERS})